--   Select all columns from the employee table.
SELECT * FROM employee;

-- Select unique department names from the 'department' table:
SELECT DISTINCT department_name
FROM department;

--Select employee names and salaries from the 'employee' table, ordered by salary in descending order:
SELECT employee_name, salary
FROM employee
ORDER BY salary DESC;

--Select products with a price between £100 and £500 from the 'product' table:
SELECT product_name, price
FROM product
WHERE price BETWEEN 100 AND 500;

--Select orders made by employees in the 'IT' department by joining 'purchase' and 'employee' tables:
SELECT p.order_id, p.quantity, e.employee_name
FROM purchase p
JOIN employee e ON p.employee_id = e.employee_id
JOIN department d ON e.department_id = d.department_id
WHERE d.department_name = 'IT';

--Select products with names containing 'Chair' using a wildcard:
SELECT product_name, price, stock_quantity, product_id
FROM product
WHERE product_name LIKE '%Chair%';

--Select orders made by employees with IDs 1, 3, and 5:
SELECT *
FROM purchase
WHERE employee_id IN (1, 3, 5);

-- Select the average salary of all employees:
SELECT AVG(salary) AS average_salary
FROM employee;

-- Select employees hired after '2022-03-01' with a salary greater than £60000:
SELECT employee_name, hire_date, salary
FROM employee
WHERE hire_date > '2022-03-01'
AND salary > 60000;

--Select departments with more than 1 employee, counting the number of employees in each department:
SELECT d.department_id, d.department_name, COUNT(e.employee_id) AS employee_count
FROM department d
JOIN employee e ON d.department_id = e.department_id
GROUP BY d.department_id, d.department_name
HAVING COUNT(e.employee_id) > 1;
